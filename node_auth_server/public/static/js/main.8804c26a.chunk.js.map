{"version":3,"sources":["components/Ni/index.js","components/Login.js","components/Register.js","components/Thanks.js","components/Poll.js","components/App.js","serviceWorker.js","index.js"],"names":["Ni","React","Component","Login","props","handleButtonClick","bind","handleChange","state","user","email","password","alert","msg","display","e","preventDefault","this","target","id","value","setState","setTimeout","axios","post","SERVER","headers","then","response","status","data","login","console","log","history","push","showAlert","className","src","role","onChange","type","required","to","onClick","Register","register","href","Thanks","TabPanel","children","index","other","Typography","component","hidden","aria-labelledby","Box","p","Poll","questions","currentQId","showThanks","handleTabClick","handleRadioClick","get","res","length","submitForm","poll","stopPropagation","checked","Number","style","minHeight","axis","onChangeIndex","map","q","key","dir","country","sport","name","App","basename","exact","path","bg","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","red","secondary","main","orange","light","dark","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"0NAYeA,E,iLANP,OACI,8D,GAJKC,IAAMC,W,iCC0HRC,E,YAtHX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,MAAQ,CACTC,KAAK,aACDC,MAAO,GACPC,SAAU,IACT,mBAAqB,IAE1BC,MAAO,CACHC,IAAK,GACLC,SAAS,IAZF,E,0EAiBNC,GACTA,EAAEC,iBADU,IAELP,EAAQQ,KAAKT,MAAbC,KACPA,EAAKM,EAAEG,OAAOC,IAAMJ,EAAEG,OAAOE,MAC7BH,KAAKI,SAAS,CAACZ,W,gCAGTI,GAAM,IAAD,OACJD,EAASK,KAAKT,MAAdI,MACPA,EAAMC,IAAMA,EACZD,EAAME,SAAU,EAChBG,KAAKI,SAAS,CAACT,UACfU,YAAW,WACPV,EAAME,SAAU,EAChB,EAAKO,SAAS,CAACT,YAChB,IAAMK,Q,wCAGKF,GAAI,IAAD,OACjBA,EAAEC,iBACF,IACOP,EAAQQ,KAAKT,MAAbC,KACHA,EAAKC,OAASD,EAAKE,SACnBY,IAAMC,KAAKC,qCAAoB,CAACf,MAAOD,EAAKC,MAAOC,SAAUF,EAAKE,UAC9D,CACIe,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GACgB,MAApBA,EAASC,QAA0C,YAAxBD,EAASE,KAAKC,OACzCC,QAAQC,IAAI,iBACZ,EAAK7B,MAAM8B,QAAQC,KAAK,WAExBH,QAAQC,IAAI,gBAAiBL,GAC7B,EAAKQ,UAAU,uCAIvBnB,KAAKmB,UAAU,yC,+BAIb,IAAD,OACExB,EAASK,KAAKT,MAAdI,MAEP,OACI,yBAAKyB,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,MAAMC,IAAI,6BAE7B,yBAAKD,UAAU,aACVzB,EAAME,SACP,yBAAKuB,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBAAmBE,KAAK,YAM/C,yBAAKF,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uCACX,2BAAOA,UAAU,sBAAjB,SACA,2BAAOG,SAAU,SAAAzB,GAAC,OAAI,EAAKR,aAAaQ,IAAII,GAAG,QAAQsB,KAAK,QACrDC,UAAQ,EAACL,UAAU,mBAGlC,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uCACX,2BAAOA,UAAU,sBAAjB,YACA,2BAAOG,SAAU,SAAAzB,GAAC,OAAI,EAAKR,aAAaQ,IAAII,GAAG,WACxCsB,KAAK,WAAWC,UAAQ,EAACL,UAAU,mBAGlD,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,6BACA,6BACA,kBAAC,IAAD,CAAMM,GAAG,YAAYN,UAAU,sBAA/B,UACA,4BAAQlB,GAAG,YAAYyB,QAAS,SAAA7B,GAAC,OAAI,EAAKV,kBAAkBU,IACpD0B,KAAK,SAASJ,UAAU,+BADhC,sB,GAtG5BpC,IAAMC,WCuIX2C,E,YArIX,WAAYzC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,MAAQ,CACTC,KAAM,CACFC,MAAO,GACPC,SAAU,IAEdC,MAAO,CACHC,IAAK,GACLC,SAAS,IAXF,E,0EAgBNC,GACTA,EAAEC,iBADU,IAELP,EAAQQ,KAAKT,MAAbC,KACPA,EAAKM,EAAEG,OAAOC,IAAMJ,EAAEG,OAAOE,MAC7BH,KAAKI,SAAS,CAACZ,W,wCAGDM,GAAI,IAAD,OACjBA,EAAEC,iBADe,IAEVP,EAAQQ,KAAKT,MAAbC,KAEP,GAAIA,EAAKC,OAASD,EAAKE,UAAYF,EAAK,oBAAqB,CACzD,GAAIA,EAAKE,WAAaF,EAAK,oBAEvB,OADAQ,KAAKmB,UAAU,6BACR,EAEXb,IAAMC,KAAKC,wCAAoB,CAACf,MAAOD,EAAKC,MAAOC,SAAUF,EAAKE,UAC9D,CACIe,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GACgB,MAApBA,EAASC,QAA6C,YAA3BD,EAASE,KAAKgB,UACzCd,QAAQC,IAAI,iBACZ,EAAK7B,MAAM8B,QAAQC,KAAK,WAExBH,QAAQC,IAAI,gBAAiBL,GAC7B,EAAKQ,UAAU,sCAIvBnB,KAAKmB,UAAU,yC,gCAKbvB,GAAM,IAAD,OACJD,EAASK,KAAKT,MAAdI,MACPA,EAAMC,IAAMA,EACZD,EAAME,SAAU,EAChBG,KAAKI,SAAS,CAACT,UACfU,YAAW,WACPV,EAAME,SAAU,EAChB,EAAKO,SAAS,CAACT,YAChB,IAAMK,Q,+BAGH,IAAD,OACEL,EAASK,KAAKT,MAAdI,MAEP,OACI,yBAAKyB,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,eACX,uBAAGU,KAAK,gBACJ,yBAAKV,UAAU,MAAMC,IAAI,8BAGjC,yBAAKD,UAAU,aACVzB,EAAME,SACP,yBAAKuB,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBAAmBE,KAAK,SACnC,uBAAGQ,KAAK,eAAeV,UAAU,cAAczB,EAAMC,KADzD,OAOR,yBAAKwB,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uCACX,2BAAOA,UAAU,sBAAjB,SACA,2BAAOG,SAAU,SAAAzB,GAAC,OAAI,EAAKR,aAAaQ,IAAII,GAAG,QAAQsB,KAAK,QACrDC,UAAQ,EAACL,UAAU,mBAGlC,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uCACX,2BAAOA,UAAU,sBAAjB,YACA,2BAAOG,SAAU,SAAAzB,GAAC,OAAI,EAAKR,aAAaQ,IAAII,GAAG,WACxCsB,KAAK,WAAWC,UAAQ,EAACL,UAAU,mBAGlD,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uCACX,2BAAOA,UAAU,sBAAjB,oBACA,2BAAOG,SAAU,SAAAzB,GAAC,OAAI,EAAKR,aAAaQ,IAAII,GAAG,mBACxCsB,KAAK,WAAWC,UAAQ,EAACL,UAAU,mBAGlD,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,6BACA,6BACA,kBAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,sBAA5B,SACA,4BAAQlB,GAAG,eAAeyB,QAAS,SAAA7B,GAAC,OAAI,EAAKV,kBAAkBU,IACvD0B,KAAK,SACLJ,UAAU,+BAFlB,yB,GApHzBpC,IAAMC,W,kECQd8C,MAZf,WACI,OACI,yBAAKX,UAAU,OACX,yBAAKA,UAAU,aACX,sCACA,yDACA,uBAAGU,KAAK,QAAQV,UAAU,YAA1B,cCYhB,SAASY,EAAS7C,GAAQ,IACf8C,EAAoC9C,EAApC8C,SAAU9B,EAA0BhB,EAA1BgB,MAAO+B,EAAmB/C,EAAnB+C,MAAUC,EADb,YACsBhD,EADtB,8BAGrB,OACI,kBAACiD,EAAA,EAAD,eACIC,UAAU,MACVf,KAAK,WACLgB,OAAQnC,IAAU+B,EAClBhC,GAAE,8BAAyBgC,GAC3BK,kBAAA,yBAAmCL,IAC/BC,GAEHhC,IAAU+B,GAAS,kBAACM,EAAA,EAAD,CAAKC,EAAG,GAAIR,I,IAyN7BS,E,YAtMX,WAAYvD,GAAQ,IAAD,8BACf,4CAAMA,KACDI,MAAQ,CACToD,UAAW,GAAIC,WAAY,EAAGC,YAAY,EAC1ClD,MAAO,CACHC,IAAK,GACLC,SAAS,IAGjB,EAAKiD,eAAiB,EAAKA,eAAezD,KAApB,gBACtB,EAAK0D,iBAAmB,EAAKA,iBAAiB1D,KAAtB,gBAVT,E,uEAaTO,GAAM,IAAD,OACJD,EAASK,KAAKT,MAAdI,MACPA,EAAMC,IAAMA,EACZD,EAAME,SAAU,EAChBG,KAAKI,SAAS,CAACT,UACfU,YAAW,WACPV,EAAME,SAAU,EAChB,EAAKO,SAAS,CAACT,YAChB,IAAMK,Q,0CAGQ,IAAD,OAEhBM,IAAM0C,IAAIxC,6CAAoBE,MAAK,SAAAuC,GAAG,OAAI,EAAK7C,SAAS,CAACuC,UAAWM,EAAIpC,Y,qCAG7Df,EAAG8C,GACd9C,EAAEC,iBAEE6C,EADgB5C,KAAKT,MAAlBoD,UACoBO,OACvBlD,KAAKI,SAAS,CAACwC,eAEf5C,KAAKmD,e,mCAIC,IAAD,OAEFR,EAAa3C,KAAKT,MAAlBoD,UACPrC,IAAMC,KAAKC,2CAAoB,CAACmC,cAAYjC,MAAK,SAAAuC,GAC7ClC,QAAQC,IAAI,UAAWiC,GAClBA,EAAIpC,KAAKuC,MAA0B,YAAlBH,EAAIpC,KAAKuC,KAI3B,EAAKhD,SAAS,CAACyC,YAAY,KAH3B,EAAK1B,UAAU,sBACfJ,QAAQC,IAAI,2B,uCAOPlB,GAAI,IAAD,OAChBA,EAAEC,iBACFD,EAAEuD,kBAFc,MAGgBrD,KAAKT,MAA9BoD,EAHS,EAGTA,UAAWC,EAHF,EAGEA,WAClB7B,QAAQC,IAAI,UAAW4B,EAAY9C,EAAEG,OAAOC,MAAIyC,EAAUC,GAAYU,SA5F5D,WA4FuEX,EAAUC,GAAYU,UACvGX,EAAUC,GAAYU,QAAUxD,EAAEG,OAAOC,GACzCG,YAAW,WACP,EAAKD,SAAS,CAACuC,gBAChB,IAAK3C,Q,+BAGF,IAAD,SAC8CA,KAAKT,MAAjDqD,EADF,EACEA,WAAYD,EADd,EACcA,UAAWE,EADzB,EACyBA,WAAYlD,EADrC,EACqCA,MAE1C,OACI,yBAAKyB,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,mCACX,wBAAIA,UAAU,cAAd,kBACS,oCAAUmC,OAAOX,GAAc,EAA/B,IAAmCD,GAAaA,EAAUO,OAA1D,MACT,uBAAG9B,UAAU,iBAAb,qCAEJ,yBAAKA,UAAU,YAAYoC,MAAO,CAACC,UAAW,UACzC9D,EAAME,SACP,yBAAKuB,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBAAmBE,KAAK,SACnC,uBAAGQ,KAAK,eAAeV,UAAU,cAAczB,EAAMC,KADzD,QArHf,GA4IuB,IAAfiD,EACG,kBAAC,EAAD,MAEA,kBAAC,IAAD,CACIa,KAAM,IACNxB,MAAOU,EACPe,cAAe,kBAAM,OAEpBhB,GACDA,EAAUiB,KAAI,SAACC,EAAG3B,GAAJ,OACV,kBAACF,EAAD,CAAU8B,IAAKD,EAAE3D,GAAIC,MAAOyC,EAAYV,MAAOA,EACrC6B,IAAK,KAEX,8BACI,yBAAK3C,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,kBAAb,oBAEJ,wBAAIA,UAAU,cAAcyC,EAAEG,SAC9B,2BAAG,gCAASH,EAAEI,MAAX,OAA8BJ,EAAEK,SAI/C,yBAAK9C,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,+BACX,2BAAOA,UAAU,oBACb,2BAAOA,UAAU,mBAAmBI,KAAK,QAClC0C,KAAK,eACL3C,SAAU,SAAAzB,GAAC,OAAI,EAAKiD,iBAAiBjD,IACrC6B,QAAS,SAAA7B,GAAC,OAAI,EAAKiD,iBAAiBjD,IACpCI,GA3KrD,SA2KoEC,MAAM,SACrBmD,WAASO,EAAEP,SA5KhE,WA4K2EO,EAAEP,WANnC,iBAQI,0BAAMlC,UAAU,UACZ,0BAAMA,UAAU,aAI5B,yBAAKA,UAAU,+BACX,2BAAOA,UAAU,oBACb,2BAAOA,UAAU,mBAAmBI,KAAK,QAClC0C,KAAK,eACL3C,SAAU,SAAAzB,GAAC,OAAI,EAAKiD,iBAAiBjD,IACrC6B,QAAS,SAAA7B,GAAC,OAAI,EAAKiD,iBAAiBjD,IACpCI,GAxL1D,OAwLoEC,MAAM,YAChBmD,WAASO,EAAEP,SAzLrE,SAyLgFO,EAAEP,WANnC,OAQI,0BAAMlC,UAAU,UACZ,0BAAMA,UAAU,aAI5B,yBAAKA,UAAU,+BACX,2BAAOA,UAAU,oBACb,2BAAOA,UAAU,mBAAmBI,KAAK,QAClC0C,KAAK,eACL3C,SAAU,SAAAzB,GAAC,OAAI,EAAKiD,iBAAiBjD,IACrC6B,QAAS,SAAA7B,GAAC,OAAI,EAAKiD,iBAAiBjD,IACpCI,GArMrD,SAqMoEC,MAAM,SACrBmD,WAASO,EAAEP,SAtMhE,WAsM2EO,EAAEP,WANnC,iBAQI,0BAAMlC,UAAU,UACZ,0BAAMA,UAAU,eAMpC,4BACIO,QAAS,SAAA7B,GAAC,OAAI,EAAKgD,eAAehD,EAAa,IAAVoC,EAAc,EAAIA,EAAQ,IAC/DV,KAAK,SACLJ,UAAU,kCAHd,YAKA,4BACIO,QAAS,SAAA7B,GAAC,OAAI,EAAKgD,eAAehD,EAAGoC,EAAQS,EAAUO,OAAShB,EAAQ,EAAIA,IAC5EV,KAAK,SACLJ,UAAU,sCAAsCc,EAAQS,EAAUO,OAAS,EAAI,OAAS,UAC5F,yBAAK9B,UAAU,2B,GAxL5CpC,IAAMC,WCxBVkF,E,iLAfP,OACI,kBAAC,IAAD,CAAeC,SAAS,KACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,IAAOjC,UAAWnD,IACnC,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAI,SAAYjC,UAAWnD,IACxC,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAI,YAAejC,UAAWT,IAC3C,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAI,QAAWjC,UAAWK,IACvC,kBAAC,IAAD,CAAOL,UAAWtD,KAEtB,kBAAC,IAAD,CAAayC,KAAK,SAAS+C,IAAI,S,GAZ7BtF,aCGEuF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uDCTAC,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAASC,IACTC,UAAW,CACPC,KAAMC,IAAO,KACbC,MAAOD,IAAO,KACdE,KAAMF,IAAO,SAKzBG,IAASC,OACT,kBAAC,IAAD,CAAkBX,MAAOA,GACrB,kBAAC,EAAD,OAEJY,SAASC,eAAe,SD2GlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnF,MAAK,SAAAoF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlF,QAAQkF,MAAMA,EAAMC,a","file":"static/js/main.8804c26a.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Ni extends React.Component {\n\n    render() {\n        return(\n            <div>Not Implemented component</div>\n        )\n    }\n}\n\nexport default Ni;\n","import React from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nlet SERVER = process.env.REACT_APP_SERVER_URL ? process.env.REACT_APP_SERVER_URL : '';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            user: {\n                email: '',\n                password: '',\n                ['confirm-password']: '',\n            },\n            alert: {\n                msg: '',\n                display: false\n            }\n        }\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        const {user} = this.state;\n        user[e.target.id] = e.target.value;\n        this.setState({user});\n    }\n\n    showAlert(msg) {\n        const {alert} = this.state;\n        alert.msg = msg;\n        alert.display = true;\n        this.setState({alert});\n        setTimeout(() => {\n            alert.display = false;\n            this.setState({alert})\n        }, 3000, this);\n    }\n\n    handleButtonClick(e) {\n        e.preventDefault();\n        const END_POINT = '/api/v1/login';\n        const {user} = this.state;\n        if (user.email && user.password) {\n            axios.post(SERVER + END_POINT, {email: user.email, password: user.password},\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }).then(response => {\n                if (response.status === 200 && response.data.login === 'success') {\n                    console.log('Login success');\n                    this.props.history.push('/poll')\n                } else {\n                    console.log('Fail response', response)\n                    this.showAlert('Email or Password is incorrect!');\n                }\n            })\n        } else {\n            this.showAlert('Email and Password cannot be blank!');\n        }\n    }\n\n    render() {\n        const {alert} = this.state;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4 offset-md-4\">\n                    <div className=\"card card-profile\">\n                        <div className=\"card-avatar\">\n                            <img className=\"img\" src=\"/images/user-avatar.png\"/>\n                        </div>\n                        <div className=\"card-body\">\n                            {alert.display &&\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                    </div>\n                                </div>\n                            </div>\n                            }\n\n                            <div className=\"row\">\n                                <div className=\"col-md-10 offset-md-1\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group bmd-form-group text-left\">\n                                                <label className=\"bmd-label-floating\">Email</label>\n                                                <input onChange={e => this.handleChange(e)} id=\"email\" type=\"email\"\n                                                       required className=\"form-control\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group bmd-form-group text-left\">\n                                                <label className=\"bmd-label-floating\">Password</label>\n                                                <input onChange={e => this.handleChange(e)} id=\"password\"\n                                                       type=\"password\" required className=\"form-control\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group\">\n                                                <br/>\n                                                <br/>\n                                                <Link to=\"/register\" className=\"pull-left nav-link\">Signup</Link>\n                                                <button id=\"btn-login\" onClick={e => this.handleButtonClick(e)}\n                                                        type=\"submit\" className=\"btn btn-primary pull-center\">Login\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login;\n\n","import React from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nconst SERVER = process.env.REACT_APP_SERVER_URL ? process.env.REACT_APP_SERVER_URL : '';\n\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            user: {\n                email: '',\n                password: ''\n            },\n            alert: {\n                msg: '',\n                display: false\n            }\n        }\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        const {user} = this.state;\n        user[e.target.id] = e.target.value;\n        this.setState({user});\n    }\n\n    handleButtonClick(e) {\n        e.preventDefault();\n        const {user} = this.state;\n        const END_POINT = '/api/v1/register';\n        if (user.email && user.password && user['confirm-password']) {\n            if (user.password !== user['confirm-password']) {\n                this.showAlert('Password does not match!');\n                return false;\n            }\n            axios.post(SERVER + END_POINT, {email: user.email, password: user.password},\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }).then(response => {\n                if (response.status === 201 && response.data.register === 'success') {\n                    console.log('Login success');\n                    this.props.history.push('/poll')\n                } else {\n                    console.log('Fail response', response)\n                    this.showAlert('Email already registered!');\n                }\n            })\n        } else {\n            this.showAlert('Email and Password cannot be blank!');\n        }\n\n    }\n\n    showAlert(msg) {\n        const {alert} = this.state;\n        alert.msg = msg;\n        alert.display = true;\n        this.setState({alert});\n        setTimeout(() => {\n            alert.display = false;\n            this.setState({alert})\n        }, 3000, this);\n    }\n\n    render() {\n        const {alert} = this.state;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4 offset-md-4\">\n                    <div className=\"card card-profile\">\n                        <div className=\"card-avatar\">\n                            <a href=\"javascript:;\">\n                                <img className=\"img\" src=\"/images/user-avatar.png\"/>\n                            </a>\n                        </div>\n                        <div className=\"card-body\">\n                            {alert.display &&\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        <a href=\"javascript:;\" className=\"alert-link\">{alert.msg}</a>.\n                                    </div>\n                                </div>\n                            </div>\n                            }\n\n                            <div className=\"row\">\n                                <div className=\"col-md-10 offset-md-1\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group bmd-form-group text-left\">\n                                                <label className=\"bmd-label-floating\">Email</label>\n                                                <input onChange={e => this.handleChange(e)} id=\"email\" type=\"email\"\n                                                       required className=\"form-control\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group bmd-form-group text-left\">\n                                                <label className=\"bmd-label-floating\">Password</label>\n                                                <input onChange={e => this.handleChange(e)} id=\"password\"\n                                                       type=\"password\" required className=\"form-control\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group bmd-form-group text-left\">\n                                                <label className=\"bmd-label-floating\">Confirm password</label>\n                                                <input onChange={e => this.handleChange(e)} id=\"confirm-password\"\n                                                       type=\"password\" required className=\"form-control\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group\">\n                                                <br/>\n                                                <br/>\n                                                <Link to=\"/login\" className=\"pull-left nav-link\">Login</Link>\n                                                <button id=\"btn-register\" onClick={e => this.handleButtonClick(e)}\n                                                        type=\"submit\"\n                                                        className=\"btn btn-primary pull-center\">Register\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Register;\n\n","import React from 'react';\n\n\nfunction Thanks() {\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <h1>Thanks</h1>\n                <h4>for submitting this poll.</h4>\n                <a href=\"/poll\" className=\"nav-link\">Restart</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Thanks;\n","import React from 'react';\nimport axios from \"axios\";\n\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Thanks from './Thanks';\n\nlet SERVER = process.env.REACT_APP_SERVER_URL ? process.env.REACT_APP_SERVER_URL : '';\n\nconst SHOW_APP_BAR = false;\n\nconst HOME_WINS = 'team-a';\nconst DRAW = 'draw';\nconst AWAY_WINS = 'team-b';\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [], currentQId: 0, showThanks: false,\n            alert: {\n                msg: '',\n                display: false\n            }\n        };\n        this.handleTabClick = this.handleTabClick.bind(this);\n        this.handleRadioClick = this.handleRadioClick.bind(this);\n    }\n\n    showAlert(msg) {\n        const {alert} = this.state;\n        alert.msg = msg;\n        alert.display = true;\n        this.setState({alert});\n        setTimeout(() => {\n            alert.display = false;\n            this.setState({alert})\n        }, 3000, this);\n    }\n\n    componentDidMount() {\n        const END_POINT = '/api/v1/random-games'\n        axios.get(SERVER + END_POINT).then(res => this.setState({questions: res.data}))\n    }\n\n    handleTabClick(e, currentQId) {\n        e.preventDefault();\n        const {questions} = this.state;\n        if (currentQId < questions.length) {\n            this.setState({currentQId});\n        } else {\n            this.submitForm();\n        }\n    }\n\n    submitForm() {\n        const END_POINT = '/api/v1/login-games'\n        const {questions} = this.state;\n        axios.post(SERVER + END_POINT, {questions}).then(res => {\n            console.log('Posting', res)\n            if (!res.data.poll || res.data.poll !== 'success') {\n                this.showAlert('You need to login!');\n                console.log('You need to login')\n            } else {\n                this.setState({showThanks: true});\n            }\n        })\n    }\n\n    handleRadioClick(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const {questions, currentQId} = this.state;\n        console.log('Radio :', currentQId, e.target.id, questions[currentQId].checked && questions[currentQId].checked === HOME_WINS ? true : false);\n        questions[currentQId].checked = e.target.id;\n        setTimeout(() => {\n            this.setState({questions});\n        }, 300, this)\n    }\n\n    render() {\n        const {currentQId, questions, showThanks, alert} = this.state;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4 offset-md-4\">\n                    <div className=\"card\">\n                        <div className=\"card-header card-header-primary\">\n                            <h4 className=\"card-title\">Questions\n                                poll <strong>[{Number(currentQId) + 1}/{questions && questions.length}]</strong></h4>\n                            <p className=\"card-category\">Complete the following questions</p>\n                        </div>\n                        <div className=\"card-body\" style={{minHeight: '200px'}}>\n                            {alert.display &&\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        <a href=\"javascript:;\" className=\"alert-link\">{alert.msg}</a>.\n                                    </div>\n                                </div>\n                            </div>\n                            }\n                            {SHOW_APP_BAR &&\n                            <AppBar position=\"static\" color=\"default\">\n                                <Tabs\n                                    value={currentQId}\n                                    onChange={this.handleTabClick}\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                    variant=\"scrollable\"\n                                    aria-label=\"full width tabs\"\n                                >\n                                    {\n                                        questions.map((q, index) => <Tab key={q.id}\n                                                                         label={index + 1} {...a11yProps(index)}  />)\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            }\n                            {showThanks === true ?\n                                <Thanks/>\n                                :\n                                <SwipeableViews\n                                    axis={'x'}\n                                    index={currentQId}\n                                    onChangeIndex={() => null}\n                                >\n                                    {questions &&\n                                    questions.map((q, index) =>\n                                        <TabPanel key={q.id} value={currentQId} index={index}\n                                                  dir={'x'}>\n\n                                            <form>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"info\">\n                                                            <div className=\"icon icon-primary\">\n                                                                <i className=\"material-icons\">question_answer</i>\n                                                            </div>\n                                                            <h4 className=\"info-title\">{q.country}</h4>\n                                                            <p><strong>{q.sport} : </strong>{q.name}</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"form-check form-check-radio\">\n                                                            <label className=\"form-check-label\">\n                                                                <input className=\"form-check-input\" type=\"radio\"\n                                                                       name=\"winnerRadios\"\n                                                                       onChange={e => this.handleRadioClick(e)}\n                                                                       onClick={e => this.handleRadioClick(e)}\n                                                                       id={HOME_WINS} value=\"team-a\"\n                                                                       checked={q.checked && q.checked === HOME_WINS ? true : false}/>\n                                                                Home team wins\n                                                                <span className=\"circle\">\n                                                                    <span className=\"check\"></span>\n                                                                </span>\n                                                            </label>\n                                                        </div>\n                                                        <div className=\"form-check form-check-radio\">\n                                                            <label className=\"form-check-label\">\n                                                                <input className=\"form-check-input\" type=\"radio\"\n                                                                       name=\"winnerRadios\"\n                                                                       onChange={e => this.handleRadioClick(e)}\n                                                                       onClick={e => this.handleRadioClick(e)}\n                                                                       id={DRAW} value=\"team-draw\"\n                                                                       checked={q.checked && q.checked === DRAW ? true : false}/>\n                                                                Draw\n                                                                <span className=\"circle\">\n                                                                    <span className=\"check\"></span>\n                                                                </span>\n                                                            </label>\n                                                        </div>\n                                                        <div className=\"form-check form-check-radio\">\n                                                            <label className=\"form-check-label\">\n                                                                <input className=\"form-check-input\" type=\"radio\"\n                                                                       name=\"winnerRadios\"\n                                                                       onChange={e => this.handleRadioClick(e)}\n                                                                       onClick={e => this.handleRadioClick(e)}\n                                                                       id={AWAY_WINS} value=\"team-b\"\n                                                                       checked={q.checked && q.checked === AWAY_WINS ? true : false}/>\n                                                                Away team wins\n                                                                <span className=\"circle\">\n                                                                    <span className=\"check\"></span>\n                                                                </span>\n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <button\n                                                    onClick={e => this.handleTabClick(e, index === 0 ? 0 : index - 1)}\n                                                    type=\"button\"\n                                                    className=\"btn btn-outline-info pull-left\">Previous\n                                                </button>\n                                                <button\n                                                    onClick={e => this.handleTabClick(e, index < questions.length ? index + 1 : index)}\n                                                    type=\"button\"\n                                                    className=\"btn btn-outline-success pull-right\">{index < questions.length - 1 ? 'Next' : 'Submit'}</button>\n                                                <div className=\"clearfix\"></div>\n                                            </form>\n\n                                        </TabPanel>)\n                                    }\n                                </SwipeableViews>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Poll;\n","import React, {Component} from 'react';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\nimport ParticlesBg from \"particles-bg\";\n\nimport Ni from './Ni';\nimport Login from './Login';\nimport Register from './Register';\nimport Poll from './Poll';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter basename=\"/\">\n                <Switch>\n                    <Route exact path={`/`} component={Login}/>\n                    <Route exact path={`/login`} component={Login}/>\n                    <Route exact path={`/register`} component={Register}/>\n                    <Route exact path={`/poll`} component={Poll}/>\n                    <Route component={Ni}/>\n                </Switch>\n                <ParticlesBg type=\"random\" bg={true}/>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core\";\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: red,\n        secondary: {\n            main: orange[500],\n            light: orange[300],\n            dark: orange[800]\n        }\n    }\n});\n\nReactDOM.render(\n<MuiThemeProvider theme={theme}>\n    <App/>\n    </MuiThemeProvider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}